@page "/"
@using TodoApp.Client.Components
@using TodoApp.Models.Todo
@using TodoApp.Utilities.Helpers 

<PageHeader Ghost="true">
    <PageHeaderExtra>
        <Button Type="@ButtonType.Primary" OnClick="NavigateToCreateTodo">Add</Button>
    </PageHeaderExtra>
</PageHeader>

<div class="px-4">
    @if (_errors.Count > 0)
    {
        <ErrorListAlert Errors="_errors" />
    }
    <Table TItem="GetAllTodosDto" Loading="_isLoading" DataSource="_todoList" HidePagination="true">
        <Column @bind-Field="@context.Title" SorterCompare="SortingManager.SortText">
            <Text Delete="@context.IsCompleted" Disabled="@context.IsCompleted">@context.Title</Text>
        </Column>
        <Column @bind-Field="@context.Description" SorterCompare="SortingManager.SortText">
            <Text Delete="@context.IsCompleted" Disabled="@context.IsCompleted">@context.Description</Text>
        </Column>
        <Column Title="Due Date" @bind-Field="@context.DueDate" SorterCompare="SortingManager.SortDate">
            <Text Delete="@context.IsCompleted" Disabled="@context.IsCompleted">@FormatDate(context.DueDate)</Text>
        </Column>
        <Column Title="Completed" @bind-Field="@context.IsCompleted" SorterCompare="SortingManager.SortBool" Class="text-center">
            <Checkbox Disabled="true" Checked="@context.IsCompleted" />
        </Column>
        <ActionColumn Class="text-right">
            <Dropdown Trigger="@(new TriggerType[] { TriggerType.Click })" Placement="@PlacementType.BottomRight">
                <Overlay>
                    <Menu>
                        <MenuItem Icon="edit" OnClick="() => NavigateToEditTodo(context.Id)">Edit</MenuItem>

                        @if (!context.IsCompleted)
                        {
                            <MenuItem Icon="check-circle" OnClick="() => MarkAsCompleted(context.Id)">Mark Complete</MenuItem>
                        }
                        else
                        {
                            <MenuItem Icon="close-circle" OnClick="() => MarkAsIncomplete(context.Id)">Mark Incomplete</MenuItem>
                        }

                        <MenuDivider />
                        <MenuItem Icon="delete" OnClick="() => DeleteTodo(context.Id)">Delete</MenuItem>
                    </Menu>
                </Overlay>
                <ChildContent>
                    <Tooltip Title="@("Options")">
                        <Button Icon="more" />
                    </Tooltip>
                </ChildContent>
            </Dropdown>
        </ActionColumn>
    </Table>
</div>

